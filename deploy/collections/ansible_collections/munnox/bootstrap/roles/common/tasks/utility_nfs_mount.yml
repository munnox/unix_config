---

# Add an NFS mount to a FStab file along with installing nessessary packages
# 
# Example Playbook
# 
# ```
# - name: Add an NFS Mount
#   hosts: "{{ playbook_groups | default('nfs_mount') }},!disabled"
#   tasks:
#     - name: Run NFS utilty tasks in the common role
#       import_role:
#         name: munnox.bootstrap.common
#         tasks_from: utility_nfs_mount.yml
#       vars:
#         nfs_server: 192.168.0.1
#         nfs_share_uri: /export/folder
#         nfs_share_path: /mnt/folder
#         nfs_state: present
#         # nfs_state: absent
#         nfs_user: "{{ ansible_user }}"
#         nfs_group: "{{ ansible_user }}"
# ```

- name: Install nfs packages
  become: yes
  block:
    - name: install nfs on centos
      ansible.builtin.package:
        name: nfs-utils
        state: present
      when: ansible_os_family == 'RedHat'
    - name: install nfs on Debian and ubuntu
      ansible.builtin.package:
        name: nfs-common
        state: present
      when: ansible_os_family == 'Debian'
  when: nfs_state == 'present'

- name: Remove in case mount to fstab
  become: yes
  ansible.posix.mount:
    src: "{{ nfs_server }}:{{ nfs_share_uri }}"
    path: "{{ nfs_share_path }}"
    fstype: nfs
    state: absent
    # opts: rw,sync,hard,intr

- name: Make a directory '{{ nfs_share_path }}' to mount in.
  become: yes
  ansible.builtin.file:
    path: "{{ nfs_share_path }}"
    state: directory
    mode: '0775'
    owner: "{{ nfs_user }}"
    group: "{{ nfs_group }}"
  when: nfs_state == 'present'

# - name: add mount to fstab
#   become: yes
#   ansible.builtin.lineinfile:
#     path: /etc/fstab
#     line: 192.168.0.1:awx/ /mnt/awx nfs auto 0 0

- name: add mount to fstab
  become: yes
  ansible.posix.mount:
    src: "{{ nfs_server }}:{{ nfs_share_uri }}"
    path: "{{ nfs_share_path }}"
    fstype: nfs
    state: mounted
    opts: rw,sync,vers=3
    #,hard,intr
  when: nfs_state == 'present'
- name: remove mount to fstab
  become: yes
  ansible.posix.mount:
    src: "{{ nfs_server }}:{{ nfs_share_uri }}"
    path: "{{ nfs_share_path }}"
    fstype: nfs
    state: absent
    opts: rw,sync,vers=3
    #,hard,intr
  when: nfs_state == 'absent'

# - name: ensure permissions
#   become: yes
#   ansible.builtin.file:
#     path: "{{ nfs_share_path }}"
#     state: directory
#     mode: '0777'
#     owner: robert
#     group: robert
#   when: nfs_state == 'present'

- name: clear a dir
  become: yes
  ansible.builtin.file:
    path: "{{ nfs_share_path }}"
    state: absent
  when: nfs_state == 'absent'

# - name: grab kube {{ kubernetes_role }}
#   shell: |
#     sudo cp /etc/kubernetes/admin.conf $HOME/.kube/config
#   when: kubernetes_role == 'master'
# - name: grab kube
#   shell: |
#     sudo chown $(id -u):$(id -g) $HOME/.kube/config
#   when: kubernetes_role == 'master'

# - name: Add auto completion for kubectl for system
#   become: yes
#   ansble.buildin.command: kubectl completion bash | sudo tee /etc/bash_completion.d/kubectl > /dev/null
# - name: Add auto completion for kubectl for user
#   ansble.buildin.lineinfile:
#     path: $HOME/.bashrc
#     line: source <(kubectl completion bash)