- name: Set NodeJS version default is note set
  set_fact:
    nodejs:
      version: "{{ nodejs.version | default('v14.17.6') }}"
      distro: "{{ nodejs.distro | default('linux-x64') }}"
      path: "{{ nodejs.path | default('/usr/local/lib/nodejs') }}"
      install_flag: "{{ nodejs.install_flag | default(True) }}"

- name: Set derived nodejs parameters to define binary
  set_fact:
    nodejs: '{{ nodejs | combine( {"binary_name": "node-" + nodejs.version + "-" + nodejs.distro}) }}'

- name: Set derived nodejs parameters to define final install path
  set_fact:
    nodejs: '{{
        nodejs | combine(
          {
            "final_path": nodejs.path + "/" + nodejs.binary_name,
            "final_url": "https://nodejs.org/dist/" + nodejs.version + "/" + nodejs.binary_name + ".tar.xz"
          }
        )
      }}'

- name: Summaries NodeJS facts
  debug:
    msg: |
      nodejs variable:

      {{nodejs | to_nice_yaml}}

# - name: please fail
#   fail:

# Install NodeJS based on version
- name: Install NodeJS
  ansible.builtin.shell: |
    bash -c "
      # Install nodejs
      curl {{ nodejs.final_url }} --output {{nodejs.binary_name}}.tar.xz
      sudo mkdir -p {{nodejs.path}}
      sudo tar -xJvf {{nodejs.binary_name}}.tar.xz -C {{nodejs.path}}
      rm {{nodejs.binary_name}}.tar.xz
    "
  args:
    creates: "{{nodejs.path}}/node-{{nodejs.version}}-{{nodejs.distro}}/bin/node"
  tags: install_nodejs

# TODO Add path modification to .bashrc
- name: Add path to .bashrc block
  blockinfile:
    path: "~/.bashrc"
    block: |
      export PATH="{{nodejs.path}}/node-{{nodejs.version}}-{{nodejs.distro}}/bin/:$PATH"
    marker: "# {mark} ANSIBLE NODEJS MANAGED BLOCK"

- name: test node version
  ansible.builtin.shell: |
    bash -c "
      source ~/.bashrc
      node --version
    "
  register: result_node

- name: test node version
  ansible.builtin.shell: |
    bash -c "
      source ~/.bashrc
      npm --version
    "
  register: result_npm

- name: Test NodeJS Install
  assert:
    that:
      - result_node.stdout == nodejs.version
      - result_npm.stdout.split('.')|length >= 2
    fail_msg: |
      NodeJS failed to install correctly
      node --version = {{ result_node.stdout }}
      npm --version = {{ result_npm.stdout }}
    success_msg: |
      NodeJS found and noted to be the right version
      node --version = {{ result_node.stdout }}
      npm --version = {{ result_npm.stdout }}
