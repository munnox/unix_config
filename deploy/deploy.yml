---

- name: config deploy
  hosts: localhost
  tasks:
    # - name: Ping the machine to deploy
    #   ping:
    # - name: Print the playbook dir
    #   ansible.builtin.debug:
    #     var: playbook_dir
    - name: Compute the repo config dir
      set_fact:
        repo_config_path: "{{ (playbook_dir, '../configs') | path_join | realpath }}"
    # - name: Print the repo config dir
    #   ansible.builtin.debug:
    #     var: repo_config_path

    # Install NodeJS
    - name: Install neovim
      ansible.builtin.shell: |
        bash -c "
        # get appimage binary
        rm /usr/local/bin/nvim
        sudo curl -o /usr/local/bin/nvim -LO https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
        # # make it executable
        sudo chmod ugo+x /usr/local/bin/nvim
        sudo rm /usr/local/bin/vim
        sudo ln -s /usr/local/bin/nvim /usr/local/bin/vim
        "
      args:
        creates: /usr/local/bin/nvim


    # Install NodeJS
    - name: Install NodeJS
      ansible.builtin.shell: |
        bash -c "
        # Install nodejs
        NODE_JS_INSTALLED=0
        NODE_JS_VERSION=v14.15.3
        NODE_JS_DISTRO=linux-x64
        NODE_JS_NAME=\"node-$NODE_JS_VERSION-$NODE_JS_DISTRO\"
        NODE_JS_PATH="/usr/local/lib/nodejs/$NODE_JS_NAME"
        curl https://nodejs.org/dist/$NODE_JS_VERSION/$NODE_JS_NAME.tar.xz --output $NODE_JS_NAME.tar.xz
        sudo mkdir -p /usr/local/lib/nodejs
        sudo tar -xJvf $NODE_JS_NAME.tar.xz -C /usr/local/lib/nodejs
        rm $NODE_JS_NAME.tar.xz
        "
      args:
        creates: /usr/local/lib/nodejs/node-v14.15.3-linux-x64/bin/node

    # Setup Bash
    - name: test bash
      command: which bash
      register: result
      ignore_errors: yes
      changed_when: false
    - name: Is bash present
      ansible.builtin.set_fact:
        bash_present: "{{ result.rc == 0 }}"
    - name: Add config set redirect bashrc
      blockinfile:
        path: "{{ '~/.bashrc' | expanduser }}"
        marker: "# {mark} ANSIBLE MANAGED UNIX_CONFIG BLOCK"
        # insertafter: "<body>"
        block: |
          source {{repo_config_path}}/bash/bashrc
        create: yes
      when: bash_present

    # Setup GIT
    - name: test git
      command: which git
      register: result
      ignore_errors: yes
      changed_when: false
    - name: Is git present
      ansible.builtin.set_fact:
        git_present: "{{ result.rc == 0 }}"
    - name: Add config set redirect gitconfig
      blockinfile:
        path: "{{ '~/.gitconfig' | expanduser }}"
        marker: "# {mark} ANSIBLE MANAGED UNIX_CONFIG BLOCK"
        # insertafter: "<body>"
        block: |
          [include]
              path = {{repo_config_path}}/git/gitconfig
        create: yes
      when: git_present

    # Setup I3 symlink
    - name: test I3
      command: which i3
      register: result
      ignore_errors: yes
      changed_when: false
    - name: Is I3 present
      ansible.builtin.set_fact:
        i3_present: "{{ result.rc == 0 }}"
    - name: Create a symbolic link I3 config
      ansible.builtin.file:
        src: "{{repo_config_path}}/i3/config"
        dest: "{{ '~/.config/i3/config' | expanduser }}"
        # owner: foo
        # group: foo
        state: link
      when: i3_present
    - name: Create a symbolic link I3status config
      ansible.builtin.file:
        src: "{{repo_config_path}}/i3/i3status.conf"
        dest: "{{ '~/.config/i3status/config' | expanduser }}"
        # owner: foo
        # group: foo
        state: link
      when: i3_present

    # Setup Tmux symlink
    - name: test tmux
      command: which tmux
      register: result
      ignore_errors: yes
      changed_when: false
    - name: Is tmux present
      ansible.builtin.set_fact:
        tmux_present: "{{ result.rc == 0 }}"
    - name: Create a symbolic link tmux config
      ansible.builtin.file:
        src: "{{repo_config_path}}/tmux/tmux.conf"
        dest: "{{ '~/.tmux.conf' | expanduser }}"
        # owner: foo
        # group: foo
        state: link
      when: tmux_present

    # Setup alacritty symlink
    - name: test alacritty
      command: which alacritty
      register: result
      ignore_errors: yes
      changed_when: false
    - name: Is alacritty present
      ansible.builtin.set_fact:
        alacritty_present: "{{ result.rc == 0 }}"
    - name: Create a symbolic link alacritty config
      ansible.builtin.file:
        src: "{{ '~/.config/alacritty/alacritty.yml' | expanduser }}"
        dest: "{{repo_config_path}}/alacritty/alacritty.yml"
        # owner: foo
        # group: foo
        state: link
      when: alacritty_present

    # Setup zsh
    - name: test zsh
      command: which zsh
      register: result
      ignore_errors: yes
      changed_when: false
    - name: Is zsh present
      ansible.builtin.set_fact:
        zsh_present: "{{ result.rc == 0 }}"
    - name: Add config set redirect zsh
      blockinfile:
        path: "{{ '~/.zshrc' | expanduser }}"
        marker: "# {mark} ANSIBLE MANAGED UNIX_CONFIG BLOCK"
        # insertafter: "<body>"
        create: yes
        block: |
          source {{repo_config_path}}/zsh/zshrc
      when: zsh_present

    # Setup vim
    - name: test vim
      command: which vim
      register: result
      ignore_errors: yes
      changed_when: false
    - name: Is neovim present
      ansible.builtin.set_fact:
        vim_present: "{{ result.rc == 0 }}"
    - name: Add config set redirect neovim
      blockinfile:
        path: "{{ '~/.vimrc' | expanduser }}"
        marker: "\" {mark} ANSIBLE MANAGED UNIX_CONFIG BLOCK"
        # insertafter: "<body>"
        block: |
          source {{repo_config_path}}/vim/vimrc
        create: yes
      when: vim_present

    # Setup neovim
    - name: test neovim
      command: which nvim
      register: result
      ignore_errors: yes
      changed_when: false
    - name: Is neovim present
      ansible.builtin.set_fact:
        neovim_present: "{{ result.rc == 0 }}"
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ '~/.config/nvim/' | expanduser }}"
        state: directory
        mode: '0755'
      when: neovim_present
    - name: Add config set redirect neovim
      blockinfile:
        path: "{{ '~/.config/nvim/init.vim' | expanduser }}"
        marker: "\" {mark} ANSIBLE MANAGED UNIX_CONFIG BLOCK"
        # insertafter: "<body>"
        block: |
          source {{ '~/.vimrc' | expanduser }}
      when: neovim_present
